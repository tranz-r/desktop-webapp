const WPFormsGeolocationGooglePlacesAPI=window.WPFormsGeolocationGooglePlacesAPI||function(l,t){const n=[];let a;const r={init(){r.getFields(),n.length&&(r.initGeocoder(),r.initFieldPlaceMaps(),r.detectGeolocation(),r.bindFormEvents())},initFieldPlaceMaps(){n.forEach(function(e){e.map||(r.initMap(e),r.initAutocomplete(e))})},bindFormEvents(){const s=[];l.querySelectorAll(".wpforms-form").forEach(function(o){if(o.querySelector("[data-autocomplete]")){const a=o.getAttribute("data-formid");new MutationObserver(function(e){e.forEach(function(e){if(e.target.classList.contains("pac-container")&&"attributes"===e.type&&"style"===e.attributeName){const t=o.querySelector(".wpforms-submit");"none"!==e.target.style.display?(t.disabled=!0,delete s[a]):s[a]=setTimeout(function(){t.disabled=!1},300)}})}).observe(l.querySelector("body"),{attributes:!0,subtree:!0})}}),l.onwpformsRepeaterFieldCloneCreated=function(){r.getFields(),r.initFieldPlaceMaps(),r.detectGeolocation()}},showDebugMessage(e){t.location.hash&&"#wpformsdebug"===t.location.hash&&console.log(e)},closest(e,t){for(var o=e.matches||e.webkitMatchesSelector||e.mozMatchesSelector||e.msMatchesSelector;e&&!o.call(e,t);)e=e.parentElement;return e},getFields(){Array.prototype.slice.call(l.querySelectorAll('.wpforms-form .wpforms-field input[type="text"][data-autocomplete="1"]:not(.pac-target-input)')).forEach(function(e){var t,o=r.closest(e,".wpforms-field"),a=e.hasAttribute("data-display-map")?o.querySelector(".wpforms-geolocation-map"):null,s=o.classList[1]?o.classList[1].replace("wpforms-field-",""):"text";let i={};"address"===s&&(t=o.querySelector(".wpforms-field-address-country"),i={locality:{el:o.querySelector(".wpforms-field-address-city"),type:"long_name"},postal_town:{el:o.querySelector(".wpforms-field-address-city"),type:"long_name"},political:{el:o.querySelector(".wpforms-field-address-state"),type:t?"long_name":"short_name"},administrative_area_level_1:{el:o.querySelector(".wpforms-field-address-state"),type:t?"long_name":"short_name"},postal_code:{el:o.querySelector(".wpforms-field-address-postal"),type:"long_name"},country:{el:t,type:"short_name"}});o=e.getAttribute("id");r.placeAlreadyAdded(o)||n.push({fieldID:o,searchField:e,mapField:a,type:s,additionalFields:i,settings:r.getFieldSettings(e)})})},placeAlreadyAdded(t){return n.some(function(e){return e.fieldID===t})},getFieldSettings(e){return{autocompleteSettings:r.getFieldAutocompleteSettings(e),mapSettings:r.getFieldMapSettings(e),markerSettings:r.getFieldMarkerSettings(e)}},getFieldAutocompleteSettings(e){e=e.getAttribute("id").replaceAll("-","_");return Object.assign({types:["geocode"]},wpforms_geolocation_settings.autocompleteSettings.common||{},wpforms_geolocation_settings.autocompleteSettings[e]||{})},getFieldMapSettings(e){e=e.getAttribute("id").replaceAll("-","_");return Object.assign({zoom:wpforms_geolocation_settings.zoom||9,center:wpforms_geolocation_settings.default_location||{}},wpforms_geolocation_settings.mapSettings.common||{},wpforms_geolocation_settings.mapSettings[e]||{})},getFieldMarkerSettings(e){e=e.getAttribute("id").replaceAll("-","_");return Object.assign({draggable:!0},wpforms_geolocation_settings.markerSettings.common||{},wpforms_geolocation_settings.markerSettings[e]||{})},initMap(e){e.mapField&&(e.map=new google.maps.Map(e.mapField,e.settings.mapSettings),e.marker=new google.maps.Marker(Object.assign({map:e.map,position:e.settings.mapSettings.center||{}},e.settings.markerSettings)),e.marker.addListener("dragend",r.markerDragend))},initGeocoder(){a=new google.maps.Geocoder},markerDragend(t){const o=r.findFieldPlaceByMarker(this);o&&r.detectPlaceByCoordinates(t.latLng,function(e){r.updateFields(o,e),o.map.setCenter(t.latLng)})},detectByCoordinates(o,e){console.warn("The WPFormsGeolocationGooglePlacesAPI.detectByCoordinates() is deprecated since version 2.3.0! Use the WPFormsGeolocationGooglePlacesAPI.detectPlaceByCoordinates() instead."),a&&a.geocode({location:e},function(e,t){"OK"!==t?(r.showDebugMessage("Geocode was wrong"),r.showDebugMessage(e)):e[0]&&r.updateFields(o,e[0])})},detectPlace:(e,o)=>{a&&a.geocode(e,function(e,t){"OK"!==t?(r.showDebugMessage("Geocode was wrong"),r.showDebugMessage(e)):e[0]&&o(e[0])})},detectPlaceByCoordinates(e,t){this.detectPlace({location:e},t)},detectPlaceByAddress(e,t){this.detectPlace({address:e},t)},getFieldPlaceAddress:e=>{const t=[e.searchField.value];return Object.values(e.additionalFields).forEach(function(e){!e.el||t.includes(e.el.value)||t.push(e.el.value)}),t.join(" ")},updateMap(e,t){e.map&&(e.marker.setPosition(t),e.map.setCenter(t))},findFieldPlaceByMarker(t){let o=null;return n.forEach(function(e){e.marker===t&&(o=e)}),o},findFieldPlaceByAutocomplete(t){let o=null;return n.forEach(function(e){e.autocomplete===t&&(o=e)}),o},findFieldPlaceByCountry(t){let o=null;return n.forEach(function(e){e.additionalFields&&e.additionalFields.country&&e.additionalFields.country.el===t&&(o=e)}),o},findFieldPlaceByPolitical(t){let o=null;return n.forEach(function(e){e.additionalFields&&e.additionalFields.political&&e.additionalFields.political.el===t&&(o=e)}),o},initAutocomplete(t){t.autocomplete=new google.maps.places.Autocomplete(t.searchField,t.settings.autocompleteSettings),t.autocomplete.addListener("place_changed",r.updateFieldPlace),"address"===t.type&&r.initAutocompleteAddress(t),t.searchField.value&&r.detectPlaceByAddress(r.getFieldPlaceAddress(t),function(e){r.updateMap(t,e.geometry.location)}),t.settings.autocompleteSettings.strict&&(t.autocomplete.setComponentRestrictions({country:t.settings.autocompleteSettings.strict}),r.showDebugMessage("The #"+t.searchField.getAttribute("id")+" autocomplete field restrict to the "+t.settings.autocompleteSettings.strict.join(", ")+" counties"))},initAutocompleteAddress(e){r.disableBrowserAutocomplete(e.searchField),e.additionalFields.country.el&&e.additionalFields.country.el.addEventListener("change",r.updateCountry),e.additionalFields.political.el&&e.additionalFields.political.el.addEventListener("change",r.updateArea)},disableBrowserAutocomplete(e){if(-1!==navigator.userAgent.indexOf("Chrome")){const t=new MutationObserver(function(){t.disconnect(),e.setAttribute("autocomplete","chrome-off")});t.observe(e,{attributes:!0,attributeFilter:["autocomplete"]})}},updateFieldPlace(){var e,t=r.findFieldPlaceByAutocomplete(this);t?.autocomplete&&(e=t.autocomplete.getPlace()).geometry&&e.geometry.location&&(r.updateMap(t,e.geometry.location),r.updateFields(t,e))},updateFields(e,t){Object.prototype.hasOwnProperty.call(t,"formatted_address")&&("text"===e.type?r.updateTextField(e,t):"address"===e.type&&r.updateAddressFields(e,t),r.triggerEvent(e.searchField,"change"),r.showDebugMessage("Fields was updated"),r.showDebugMessage(e),r.showDebugMessage(t))},updateTextField(e,t){e.searchField.value=t.formatted_address},triggerEvent(e,t){var o=l.createEvent("HTMLEvents");o.initEvent(t,!0,!0),e.dispatchEvent(o)},updateAddressFields(e,t){let o="";var a=[];r.clearAdditionalFields(e);for(const i of t.address_components){var s=i.types[0];"route"===s?o=i.short_name:["street_number","subpremise"].includes(s)&&i.short_name?a[s]=i.short_name:e.additionalFields[s]&&(e.additionalFields[s].el?r.updateAddressField(e.additionalFields[s].el,i[e.additionalFields[s].type]):"country"===s&&l.dispatchEvent(new CustomEvent("wpforms-geolocation-absent-country-changed",{detail:{stateInputElement:e.additionalFields.political.el,shortName:i.short_name}})))}e.searchField.value=r.formatAddressField(t,r.getStreetNumber(a),o)},getStreetNumber(e){return e?.street_number+(e?.subpremise?"/"+e.subpremise:"")},updateAddressField(e,t){r.isConversationalSelect(e)?r.updateConversationalSelect(e,t):(e.value=t,this.triggerEvent(e,"change"))},isConversationalSelect(e){return"SELECT"===e.tagName&&Boolean(e.closest(".wpforms-conversational-select"))},updateConversationalSelect(e,t){var o=e.closest(".wpforms-conversational-select"),a=e.querySelector('option[value="'+t+'"]'),o=o.querySelector(".wpforms-conversational-form-dropdown-input input");e.value=t,a&&o&&(o.value=a.innerText)},clearAdditionalFields(e){Object.values(e.additionalFields).forEach(function(e){e.el&&(e.el.value="")})},formatAddressField(e,t,o){return(0===e.formatted_address.indexOf(t)?t+" "+o:o+", "+t).trim().replace(/,$|^,/g,"")},updateCountry(){var e,t=r.findFieldPlaceByCountry(this);t?.autocomplete&&(e=this.value.toString().toLocaleLowerCase(),t.autocomplete.setComponentRestrictions({country:[e]}),r.showDebugMessage("Autocomplete field restrict to the "+e+" country"))},updateArea(){var e,t,o=r.findFieldPlaceByPolitical(this);o?.autocomplete&&(e=this.value.toString().toUpperCase(),r.showDebugMessage("Autocomplete field try to find the "+e+" state"),(t=r.findStateCoordinates(o,e))?(o.autocomplete.setBounds(new google.maps.LatLngBounds(t)),r.showDebugMessage("Autocomplete field restrict to the "+e+" state")):r.showDebugMessage("Autocomplete field doesn't restrict to the "+e+" state"))},findStateCoordinates(e,o){if(e.settings.autocompleteSettings.strict){let t;return e.settings.autocompleteSettings.strict.forEach(function(e){if(wpforms_geolocation_settings.states[e]&&wpforms_geolocation_settings.states[e][o])return!(t={lat:wpforms_geolocation_settings.states[e][o].lat,lng:wpforms_geolocation_settings.states[e][o].lng})}),t}},detectGeolocation(){if(wpforms_geolocation_settings.current_location&&navigator.geolocation&&n){const a={};navigator.geolocation.getCurrentPosition(function(e){a.lat=e.coords.latitude,a.lng=e.coords.longitude,r.detectPlaceByCoordinates(a,function(o){n.forEach(function(e,t){e.currentGeolocationInited||e.searchField.closest(".wpforms-field").classList.contains("wpforms-conditional-hide")||(r.updateMap(e,a),r.updateFields(e,o),n[t].currentGeolocationInited=!0)})})})}}};return r}(document,window);function WPFormsGeolocationInitGooglePlacesAPI(){window.removeEventListener("load",WPFormsGeolocationGooglePlacesAPI.init),WPFormsGeolocationGooglePlacesAPI.init()}window.addEventListener("load",WPFormsGeolocationGooglePlacesAPI.init),window.addEventListener("elementor/popup/show",WPFormsGeolocationGooglePlacesAPI.init);